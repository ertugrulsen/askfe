{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\components\\comments\\comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\components\\comments\\comments.vue","mtime":1615592727930},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgZHhGb3JtVGV4dElucHV0IGZyb20gJy4uL2N1c3RvbWNvbnRyb2xzL2R4SW5wdXQvZHhGb3JtVGV4dElucHV0L2R4Rm9ybVRleHRJbnB1dCcNCmltcG9ydCB7IEFERF9DT01NRU5ULCBVUERBVEVfQ09NTUVOVCB9IGZyb20gJy4uLy4uL3N0b3JlL2FjdGlvbnMvY29tbWVudCcNCmltcG9ydCB7IERFTEVURV9DT01NRU5UIH0gZnJvbSAnLi4vLi4vc3RvcmUvYWN0aW9ucy9jb21tZW50Jw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdjb21tZW50cycsDQogIG1vdW50ZWQgKCkgew0KICAgIHRoaXMuR2V0Q3VycmVudFVzZXIoKQ0KICB9LA0KICBwcm9wczp7DQogICAgY29tbWVudHM6ew0KICAgICAgdHlwZTpBcnJheQ0KICAgIH0sDQogICAgcGFyZW50OnsNCiAgICAgIHR5cGU6U3RyaW5nDQogICAgfSwNCiAgICB0eXBlOnsNCiAgICAgIHR5cGU6TnVtYmVyLA0KICAgICAgcmVxdWlyZWQ6dHJ1ZQ0KICAgIH0NCiAgfSwNCiAgY29tcG9uZW50czogew0KICAgIGR4Rm9ybVRleHRJbnB1dA0KICB9LA0KICBjcmVhdGVkOiBmdW5jdGlvbigpIHsNCiAgICB0aGlzLmFjdGl2ZVVzZXIgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VycmVudFVzZXInKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnRVc2VyJykpLlVzZXJJZDogJyc7DQogIH0sDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBpbnB1dDogZmFsc2UsDQogICAgICB2YWxpZDp0cnVlLA0KICAgICAgbmV3Q29tbWVudDonJywNCiAgICAgIGFkZGVkQ29tZW50OicnLA0KICAgICAgc2VsZWN0ZWRDb21tZW50SWQ6LTEsDQogICAgICBhY3RpdmVVc2VyOicnDQogICAgfQ0KICB9LA0KICBtZXRob2RzOnsNCiAgICBHZXRDdXJyZW50VXNlcjogZnVuY3Rpb24gKCkgew0KICAgICAgdGhpcy5jdXJyZW50VXNlciA9IHRoaXMuJHN0b3JlLmdldHRlcnMuY3VycmVudFVzZXI7DQogICAgfSwNCiAgICBzYXZlKCl7DQogICAgICBpZiAoIXRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZSgpKSB7DQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgDQogICAgICB0aGlzLl9uZXdDb21tZW50ID0gdGhpcy5uZXdDb21tZW50Ow0KDQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChBRERfQ09NTUVOVCwge0lzQWN0aXZlOnRydWUsdHlwZTpwYXJzZUludCh0aGlzLnR5cGUpLFF1ZXN0aW9uX0Fuc3dlcl9JZDpwYXJzZUludCh0aGlzLnBhcmVudCksQ29tbWVudDp0aGlzLl9uZXdDb21tZW50LFVzZXJJZDpKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50VXNlcicpKS5Vc2VySWR9KS50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb21tZW50cykNCiAgICAgICAgLy8gLy8gdGhpcy4kc3RvcmUuZ2V0dGVycy5jb21tZW50DQogICAgICAgIC8vIHRoaXMuY29tbWVudHMuaW5jbHVkZXMgDQogICAgICAgIHRoaXMuY29tbWVudHMucHVzaCh7DQogICAgICAgICAgSWQ6dGhpcy4kc3RvcmUuZ2V0dGVycy5jb21tZW50SWQsDQogICAgICAgICAgVXNlcklkOkpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnRVc2VyJykpLlVzZXJJZCwNCiAgICAgICAgICBDb21tZW50OnRoaXMuX25ld0NvbW1lbnQsDQogICAgICAgICAgQ3JlYXRlVXNlcjpKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50VXNlcicpKS5Vc2VyTmFtZSwNCiAgICAgICAgICBDcmVhdGVEYXRlOnVuZGVmaW5lZH0pDQogICAgICAgIHRoaXMubmV3Q29tbWVudCA9ICcnOw0KICAgICAgICB0aGlzLmlucHV0ID0gZmFsc2U7DQogICAgICB9KS5jYXRjaChlcnJvckNvZGUgPT4geyB0aGlzLiRkaWFsb2cuYWxlcnQodGhpcy5HZXRFcnJvck1lc3NhZ2UodGhpcywgZXJyb3JDb2RlKSwgdGhpcy5hbGVydG9wdGlvbnMpIH0pDQogICAgfSwNCiAgICAgdXBkYXRlQ29tbWVudChjb21tZW50KXsNCiAgICAgIHZhciBuZXdDb21tZW50VGV4dCA9ICQodXBkYXRlQ29tbWVudElucHV0KS52YWwoKTsNCiAgICAgIGlmKG5ld0NvbW1lbnRUZXh0Lmxlbmd0aCA+IDApew0KICAgICAgICBjb21tZW50LkNvbW1lbnQgPSBuZXdDb21tZW50VGV4dDsNCiAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKFVQREFURV9DT01NRU5ULCB7SWQ6Y29tbWVudC5JZCxJc0FjdGl2ZTp0cnVlLHR5cGU6cGFyc2VJbnQodGhpcy50eXBlKSxRdWVzdGlvbl9BbnN3ZXJfSWQ6cGFyc2VJbnQodGhpcy5wYXJlbnQpLENvbW1lbnQ6bmV3Q29tbWVudFRleHQsVXNlcklkOkpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnRVc2VyJykpLlVzZXJJZH0pLnRoZW4ocmVzcG9uc2UgPT4gew0KICAgICAgICAgdGhpcy5zZWxlY3RlZENvbW1lbnRJZD0tMTsNCiAgICAgIH0pLmNhdGNoKGVycm9yQ29kZSA9PiB7IHRoaXMuJGRpYWxvZy5hbGVydCh0aGlzLkdldEVycm9yTWVzc2FnZSh0aGlzLCBlcnJvckNvZGUpLCB0aGlzLmFsZXJ0b3B0aW9ucykgfSkNCiAgICAgIH0NCiAgICB9LA0KICAgIGlzVXBkYXRlYWJsZShjb21tZW50KXsNCiAgICAgIGlmKGNvbW1lbnQuVXNlcklkID09IHRoaXMuYWN0aXZlVXNlcil7DQogICAgICAgIHJldHVybiB0cnVlDQogICAgICB9DQogDQogICAgICByZXR1cm4gZmFsc2U7DQogICAgfSwNCiAgICBpc1NlbGVjdGVkKGNvbW1lbnQpew0KICAgICAgaWYoY29tbWVudC5JZCA9PT0gdGhpcy5zZWxlY3RlZENvbW1lbnQuSWQpew0KICAgICAgICByZXR1cm4gdHJ1ZQ0KICAgICAgfQ0KIA0KICAgICAgcmV0dXJuIGZhbHNlDQogICAgfSwNCiAgICAgIGRlbGV0ZUNvbW1lbnQgOiBmdW5jdGlvbiAoY29tbWVudEFuc3dlcklkKXsNCiAgICAgIGxldCByZXF1ZXN0ID0gew0KICAgICAgICBJZDogY29tbWVudEFuc3dlcklkLA0KICAgICAgICBJc0FjdGl2ZTp0cnVlDQogICAgICB9OyAgICAgICAgIA0KICAgICANCiAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goREVMRVRFX0NPTU1FTlQsIHJlcXVlc3QpLnRoZW4ocmVzcG9uc2UgPT4geyAgDQogICAgICAgIHRoaXMuY29tbWVudHMuc3BsaWNlKHRoaXMuY29tbWVudHMuZmluZEluZGV4KChlbCkgPT4gew0KICAgICAgICAgIHJldHVybiBlbC5JZCA9PT0gY29tbWVudEFuc3dlcklkDQogICAgICAgIH0pLDEpDQogICAgICAgICAgDQogICAgICB9KS5jYXRjaChlcnJvckNvZGUgPT4geyB0aGlzLiRkaWFsb2cuYWxlcnQodGhpcy5HZXRFcnJvck1lc3NhZ2UodGhpcywgZXJyb3JDb2RlKSwgdGhpcy5hbGVydG9wdGlvbnMpIH0pICAgICAgICAgDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"comments.vue","sourceRoot":"src/components/comments","sourcesContent":["<template>\r\n  <v-list class=\"pl-3 pr-3\">\r\n    <v-list-item  v-for=\"comment in comments\" :key=\"parseInt(comment.Id)\" >\r\n      <v-list-item-content class=\"comment-content text--disabled px-0\">\r\n        <v-list-item-title v-if=\"selectedCommentId != comment.Id\" v-text=\"comment.Comment\"></v-list-item-title>\r\n        <dxFormTextInput v-if=\"selectedCommentId == comment.Id\" class=\"commentInput\" id=\"updateCommentInput\" ref=\"commentsRef\" :clear=\"true\" :isRequired=true />\r\n        <v-list-item-subtitle v-if=\"selectedCommentId != comment.Id\" class=\"comment-subtitle text-right\"><span class=\"primary--text\">{{comment.CreateUser }}</span> {{comment.CreateDate ?', '+ comment.CreateDate:''}}</v-list-item-subtitle>                                        \r\n      </v-list-item-content>              \r\n      <v-list-item-action class=\"comment-update-delete-area\">         \r\n              <v-icon small @click=\"deleteComment(comment.Id)\" v-if=\"isUpdateable(comment)&& selectedCommentId != comment.Id\" class=\"comment-icon px-2 comment-update\">mdi-minus-circle</v-icon>\r\n              <v-icon small @click=\"selectedCommentId = comment.Id\" v-if=\"isUpdateable(comment) && selectedCommentId != comment.Id\" class=\"comment-icon px-2 comment-update\">fas fa-pencil-alt</v-icon>\r\n              <v-icon small @click=\"selectedCommentId=-1\" v-if=\"isUpdateable(comment) && selectedCommentId == comment.Id\" class=\"comment-icon px-2 comment-update\">mdi-cancel</v-icon>\r\n              <v-icon small @click=\"updateComment(comment)\" v-if=\"isUpdateable(comment) && selectedCommentId == comment.Id\" class=\"comment-icon px-2 comment-update\"> mdi-checkbox-marked-circle</v-icon>\r\n        </v-list-item-action>      \r\n    </v-list-item>\r\n    <v-list-item >\r\n      <v-list-item-content >\r\n        <v-row >\r\n          <v-col v-if=\"input\" cols=\"12\" >\r\n            <v-form  ref=\"form\" v-model=\"valid\" lazy-validation>\r\n              <dxFormTextInput  id=\"commentInput\" ref=\"commentsRef\" v-model=\"newComment\" placeholder=\"your_comment\" :clear=\"true\" :isRequired=true />\r\n            </v-form>\r\n          </v-col>\r\n          <v-col cols=\"12\"  class=\"text-right\">\r\n            <v-btn x-small outlined  color=\"blue darken-2\"  v-if=\"!input\" @click=\"input = !input\" >\r\n              <v-icon small  class=\"comment-icon\">fas fa-pencil-alt</v-icon> Add comment\r\n            </v-btn>\r\n            <v-btn x-small outlined color=\"blue-grey\"  class=\"mx-2 white--text\" v-if=\"input\" @click=\"input = !input\" >\r\n              <v-icon small  class=\"comment-icon\">fas fa-times</v-icon>  Cancel \r\n            </v-btn>\r\n            <v-btn x-small outlined color=\"success\" v-if=\"input\" @click=\"save\">\r\n              <v-icon small  class=\"comment-icon\" >fas fa-plus-circle</v-icon>  Save \r\n            </v-btn>\r\n          </v-col>        \r\n        </v-row>       \r\n      </v-list-item-content>\r\n    </v-list-item>\r\n  </v-list>\r\n</template>\r\n\r\n<script>\r\nimport dxFormTextInput from '../customcontrols/dxInput/dxFormTextInput/dxFormTextInput'\r\nimport { ADD_COMMENT, UPDATE_COMMENT } from '../../store/actions/comment'\r\nimport { DELETE_COMMENT } from '../../store/actions/comment'\r\n\r\nexport default {\r\n  name: 'comments',\r\n  mounted () {\r\n    this.GetCurrentUser()\r\n  },\r\n  props:{\r\n    comments:{\r\n      type:Array\r\n    },\r\n    parent:{\r\n      type:String\r\n    },\r\n    type:{\r\n      type:Number,\r\n      required:true\r\n    }\r\n  },\r\n  components: {\r\n    dxFormTextInput\r\n  },\r\n  created: function() {\r\n    this.activeUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')).UserId: '';\r\n  },\r\n  data () {\r\n    return {\r\n      input: false,\r\n      valid:true,\r\n      newComment:'',\r\n      addedComent:'',\r\n      selectedCommentId:-1,\r\n      activeUser:''\r\n    }\r\n  },\r\n  methods:{\r\n    GetCurrentUser: function () {\r\n      this.currentUser = this.$store.getters.currentUser;\r\n    },\r\n    save(){\r\n      if (!this.$refs.form.validate()) {\r\n        return\r\n      }\r\n      \r\n      this._newComment = this.newComment;\r\n\r\n      this.$store.dispatch(ADD_COMMENT, {IsActive:true,type:parseInt(this.type),Question_Answer_Id:parseInt(this.parent),Comment:this._newComment,UserId:JSON.parse(localStorage.getItem('currentUser')).UserId}).then(response => {\r\n        console.log(this.comments)\r\n        // // this.$store.getters.comment\r\n        // this.comments.includes \r\n        this.comments.push({\r\n          Id:this.$store.getters.commentId,\r\n          UserId:JSON.parse(localStorage.getItem('currentUser')).UserId,\r\n          Comment:this._newComment,\r\n          CreateUser:JSON.parse(localStorage.getItem('currentUser')).UserName,\r\n          CreateDate:undefined})\r\n        this.newComment = '';\r\n        this.input = false;\r\n      }).catch(errorCode => { this.$dialog.alert(this.GetErrorMessage(this, errorCode), this.alertoptions) })\r\n    },\r\n     updateComment(comment){\r\n      var newCommentText = $(updateCommentInput).val();\r\n      if(newCommentText.length > 0){\r\n        comment.Comment = newCommentText;\r\n         this.$store.dispatch(UPDATE_COMMENT, {Id:comment.Id,IsActive:true,type:parseInt(this.type),Question_Answer_Id:parseInt(this.parent),Comment:newCommentText,UserId:JSON.parse(localStorage.getItem('currentUser')).UserId}).then(response => {\r\n         this.selectedCommentId=-1;\r\n      }).catch(errorCode => { this.$dialog.alert(this.GetErrorMessage(this, errorCode), this.alertoptions) })\r\n      }\r\n    },\r\n    isUpdateable(comment){\r\n      if(comment.UserId == this.activeUser){\r\n        return true\r\n      }\r\n \r\n      return false;\r\n    },\r\n    isSelected(comment){\r\n      if(comment.Id === this.selectedComment.Id){\r\n        return true\r\n      }\r\n \r\n      return false\r\n    },\r\n      deleteComment : function (commentAnswerId){\r\n      let request = {\r\n        Id: commentAnswerId,\r\n        IsActive:true\r\n      };         \r\n     \r\n     this.$store.dispatch(DELETE_COMMENT, request).then(response => {  \r\n        this.comments.splice(this.comments.findIndex((el) => {\r\n          return el.Id === commentAnswerId\r\n        }),1)\r\n          \r\n      }).catch(errorCode => { this.$dialog.alert(this.GetErrorMessage(this, errorCode), this.alertoptions) })         \r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.comment-content{\r\n  border-bottom: 1px solid #a4a4a4;\r\n  padding-top: 0px;\r\n  padding-bottom: 0px;\r\n  margin-bottom: 5px;\r\n}\r\n.comment-icon{\r\n  font-size: 16px;\r\n  padding-right: 6px;\r\n  padding-bottom: 2px;\r\n  padding-top: 2px;\r\n}\r\n.comment-update{\r\n  cursor: pointer;\r\n}\r\n.comment-update-delete-area{\r\n  display: flow-root;\r\n}\r\n.commentInputforUpdate{\r\n  font-size: 12px;\r\n  height: 25px;\r\n}\r\n</style>\r\n"]}]}