{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\components\\comments\\comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\components\\comments\\comments.vue","mtime":1615668965252},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgZHhGb3JtVGV4dElucHV0IGZyb20gJy4uL2N1c3RvbWNvbnRyb2xzL2R4SW5wdXQvZHhGb3JtVGV4dElucHV0L2R4Rm9ybVRleHRJbnB1dCcNCmltcG9ydCB7IEFERF9DT01NRU5ULCBVUERBVEVfQ09NTUVOVCwgREVMRVRFX0NPTU1FTlQgfSBmcm9tICcuLi8uLi9zdG9yZS9hY3Rpb25zL2NvbW1lbnQnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ2NvbW1lbnRzJywNCiAgbW91bnRlZCAoKSB7DQogICAgdGhpcy5HZXRDdXJyZW50VXNlcigpDQogIH0sDQogIHByb3BzOiB7DQogICAgY29tbWVudHM6IHsNCiAgICAgIHR5cGU6IEFycmF5DQogICAgfSwNCiAgICBwYXJlbnQ6IHsNCiAgICAgIHR5cGU6IFN0cmluZw0KICAgIH0sDQogICAgdHlwZTogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9DQogIH0sDQogIGNvbXBvbmVudHM6IHsNCiAgICBkeEZvcm1UZXh0SW5wdXQNCiAgfSwNCiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgew0KICAgIHRoaXMuYWN0aXZlVXNlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50VXNlcicpID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VycmVudFVzZXInKSkuVXNlcklkIDogJycNCiAgfSwNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGlucHV0OiBmYWxzZSwNCiAgICAgIHZhbGlkOiB0cnVlLA0KICAgICAgbmV3Q29tbWVudDogJycsDQogICAgICBhZGRlZENvbWVudDogJycsDQogICAgICBzZWxlY3RlZENvbW1lbnRJZDogLTEsDQogICAgICBhY3RpdmVVc2VyOiAnJw0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIEdldEN1cnJlbnRVc2VyOiBmdW5jdGlvbiAoKSB7DQogICAgICB0aGlzLmN1cnJlbnRVc2VyID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5jdXJyZW50VXNlcg0KICAgIH0sDQogICAgc2F2ZSAoKSB7DQogICAgICBpZiAoIXRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZSgpKSB7DQogICAgICAgIHJldHVybg0KICAgICAgfQ0KDQogICAgICB0aGlzLl9uZXdDb21tZW50ID0gdGhpcy5uZXdDb21tZW50DQoNCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKEFERF9DT01NRU5ULCB7IElzQWN0aXZlOiB0cnVlLCB0eXBlOiBwYXJzZUludCh0aGlzLnR5cGUpLCBRdWVzdGlvbl9BbnN3ZXJfSWQ6IHBhcnNlSW50KHRoaXMucGFyZW50KSwgQ29tbWVudDogdGhpcy5fbmV3Q29tbWVudCwgVXNlcklkOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50VXNlcicpKS5Vc2VySWQgfSkudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29tbWVudHMpDQogICAgICAgIC8vIC8vIHRoaXMuJHN0b3JlLmdldHRlcnMuY29tbWVudA0KICAgICAgICAvLyB0aGlzLmNvbW1lbnRzLmluY2x1ZGVzDQogICAgICAgIHRoaXMuY29tbWVudHMucHVzaCh7DQogICAgICAgICAgSWQ6IHRoaXMuJHN0b3JlLmdldHRlcnMuY29tbWVudElkLA0KICAgICAgICAgIFVzZXJJZDogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VycmVudFVzZXInKSkuVXNlcklkLA0KICAgICAgICAgIENvbW1lbnQ6IHRoaXMuX25ld0NvbW1lbnQsDQogICAgICAgICAgQ3JlYXRlVXNlcjogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VycmVudFVzZXInKSkuVXNlck5hbWUsDQogICAgICAgICAgQ3JlYXRlRGF0ZTogdW5kZWZpbmVkDQogICAgICAgIH0pDQogICAgICAgIHRoaXMubmV3Q29tbWVudCA9ICcnDQogICAgICAgIHRoaXMuaW5wdXQgPSBmYWxzZQ0KICAgICAgfSkuY2F0Y2goZXJyb3JDb2RlID0+IHsgdGhpcy4kZGlhbG9nLmFsZXJ0KHRoaXMuR2V0RXJyb3JNZXNzYWdlKHRoaXMsIGVycm9yQ29kZSksIHRoaXMuYWxlcnRvcHRpb25zKSB9KQ0KICAgIH0sDQogICAgdXBkYXRlQ29tbWVudCAoY29tbWVudCkgew0KICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmDQogICAgICB2YXIgbmV3Q29tbWVudFRleHQgPSAkKCcjJHVwZGF0ZUNvbW1lbnRJbnB1dCcpLnZhbCgpDQogICAgICBpZiAobmV3Q29tbWVudFRleHQubGVuZ3RoID4gMCkgew0KICAgICAgICBjb21tZW50LkNvbW1lbnQgPSBuZXdDb21tZW50VGV4dA0KICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChVUERBVEVfQ09NTUVOVCwgeyBJZDogY29tbWVudC5JZCwgSXNBY3RpdmU6IHRydWUsIHR5cGU6IHBhcnNlSW50KHRoaXMudHlwZSksIFF1ZXN0aW9uX0Fuc3dlcl9JZDogcGFyc2VJbnQodGhpcy5wYXJlbnQpLCBDb21tZW50OiBuZXdDb21tZW50VGV4dCwgVXNlcklkOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50VXNlcicpKS5Vc2VySWQgfSkudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgdGhpcy5zZWxlY3RlZENvbW1lbnRJZCA9IC0xDQogICAgICAgIH0pLmNhdGNoKGVycm9yQ29kZSA9PiB7IHRoaXMuJGRpYWxvZy5hbGVydCh0aGlzLkdldEVycm9yTWVzc2FnZSh0aGlzLCBlcnJvckNvZGUpLCB0aGlzLmFsZXJ0b3B0aW9ucykgfSkNCiAgICAgIH0NCiAgICB9LA0KICAgIGlzVXBkYXRlYWJsZSAoY29tbWVudCkgew0KICAgICAgaWYgKGNvbW1lbnQuVXNlcklkID09PSB0aGlzLmFjdGl2ZVVzZXIpIHsNCiAgICAgICAgcmV0dXJuIHRydWUNCiAgICAgIH0NCg0KICAgICAgcmV0dXJuIGZhbHNlDQogICAgfSwNCiAgICBpc1NlbGVjdGVkIChjb21tZW50KSB7DQogICAgICBpZiAoY29tbWVudC5JZCA9PT0gdGhpcy5zZWxlY3RlZENvbW1lbnQuSWQpIHsNCiAgICAgICAgcmV0dXJuIHRydWUNCiAgICAgIH0NCg0KICAgICAgcmV0dXJuIGZhbHNlDQogICAgfSwNCiAgICBkZWxldGVDb21tZW50OiBmdW5jdGlvbiAoY29tbWVudEFuc3dlcklkKSB7DQogICAgICBjb25zdCByZXF1ZXN0ID0gew0KICAgICAgICBJZDogY29tbWVudEFuc3dlcklkLA0KICAgICAgICBJc0FjdGl2ZTogdHJ1ZQ0KICAgICAgfQ0KDQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChERUxFVEVfQ09NTUVOVCwgcmVxdWVzdCkudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgIHRoaXMuY29tbWVudHMuc3BsaWNlKHRoaXMuY29tbWVudHMuZmluZEluZGV4KChlbCkgPT4gew0KICAgICAgICAgIHJldHVybiBlbC5JZCA9PT0gY29tbWVudEFuc3dlcklkDQogICAgICAgIH0pLCAxKQ0KICAgICAgfSkuY2F0Y2goZXJyb3JDb2RlID0+IHsgdGhpcy4kZGlhbG9nLmFsZXJ0KHRoaXMuR2V0RXJyb3JNZXNzYWdlKHRoaXMsIGVycm9yQ29kZSksIHRoaXMuYWxlcnRvcHRpb25zKSB9KQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"comments.vue","sourceRoot":"src/components/comments","sourcesContent":["<template>\r\n  <v-list class=\"pl-3 pr-3\">\r\n    <v-list-item  v-for=\"comment in comments\" :key=\"parseInt(comment.Id)\" >\r\n      <v-list-item-content class=\"comment-content text--disabled px-0\">\r\n        <v-list-item-title v-if=\"selectedCommentId != comment.Id\" v-text=\"comment.Comment\"></v-list-item-title>\r\n        <dxFormTextInput v-if=\"selectedCommentId == comment.Id\" class=\"commentInput\" id=\"updateCommentInput\" ref=\"commentsRef\" v-model=\"comment.Comment\" :clear=\"true\" :isRequired=true />\r\n        <v-list-item-subtitle v-if=\"selectedCommentId != comment.Id\" class=\"comment-subtitle text-right\"><span class=\"primary--text\">{{comment.CreateUser }}</span> {{comment.CreateDate ?', '+ comment.CreateDate:''}}</v-list-item-subtitle>\r\n      </v-list-item-content>\r\n      <v-list-item-action class=\"comment-update-delete-area\">\r\n        <v-icon small @click=\"deleteComment(comment.Id)\" v-if=\"isUpdateable(comment)&& selectedCommentId != comment.Id\" class=\"comment-icon px-2 comment-update\">mdi-minus-circle</v-icon>\r\n        <v-icon small @click=\"selectedCommentId = comment.Id\" v-if=\"isUpdateable(comment) && selectedCommentId != comment.Id\" class=\"comment-icon px-2 comment-update\">fas fa-pencil-alt</v-icon>\r\n        <v-icon small @click=\"selectedCommentId=-1\" v-if=\"isUpdateable(comment) && selectedCommentId == comment.Id\" class=\"comment-icon px-2 comment-update\">mdi-cancel</v-icon>\r\n        <v-icon small @click=\"updateComment(comment)\" v-if=\"isUpdateable(comment) && selectedCommentId == comment.Id\" class=\"comment-icon px-2 comment-update\"> mdi-checkbox-marked-circle</v-icon>\r\n        </v-list-item-action>\r\n    </v-list-item>\r\n    <v-list-item >\r\n      <v-list-item-content >\r\n        <v-row >\r\n          <v-col v-if=\"input\" cols=\"12\" >\r\n            <v-form  ref=\"form\" v-model=\"valid\" lazy-validation>\r\n              <dxFormTextInput  id=\"commentInput\" ref=\"commentsRef\" v-model=\"newComment\" placeholder=\"your_comment\" :clear=\"true\" :isRequired=true />\r\n            </v-form>\r\n          </v-col>\r\n          <v-col v-if=\"activeUser\" cols=\"12\"  class=\"text-right\">\r\n            <v-btn x-small outlined  color=\"blue darken-2\"  v-if=\"!input\" @click=\"input = !input\" >\r\n              <v-icon small  class=\"comment-icon\">fas fa-pencil-alt</v-icon> Add comment\r\n            </v-btn>\r\n            <v-btn x-small outlined color=\"blue-grey\"  class=\"mx-2 white--text\" v-if=\"input\" @click=\"input = !input\" >\r\n              <v-icon small  class=\"comment-icon\">fas fa-times</v-icon>  Cancel\r\n            </v-btn>\r\n            <v-btn x-small outlined color=\"success\" v-if=\"input\" @click=\"save\">\r\n              <v-icon small  class=\"comment-icon\" >fas fa-plus-circle</v-icon>  Save\r\n            </v-btn>\r\n          </v-col>\r\n        </v-row>\r\n      </v-list-item-content>\r\n    </v-list-item>\r\n  </v-list>\r\n</template>\r\n\r\n<script>\r\nimport dxFormTextInput from '../customcontrols/dxInput/dxFormTextInput/dxFormTextInput'\r\nimport { ADD_COMMENT, UPDATE_COMMENT, DELETE_COMMENT } from '../../store/actions/comment'\r\n\r\nexport default {\r\n  name: 'comments',\r\n  mounted () {\r\n    this.GetCurrentUser()\r\n  },\r\n  props: {\r\n    comments: {\r\n      type: Array\r\n    },\r\n    parent: {\r\n      type: String\r\n    },\r\n    type: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    dxFormTextInput\r\n  },\r\n  created: function () {\r\n    this.activeUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')).UserId : ''\r\n  },\r\n  data () {\r\n    return {\r\n      input: false,\r\n      valid: true,\r\n      newComment: '',\r\n      addedComent: '',\r\n      selectedCommentId: -1,\r\n      activeUser: ''\r\n    }\r\n  },\r\n  methods: {\r\n    GetCurrentUser: function () {\r\n      this.currentUser = this.$store.getters.currentUser\r\n    },\r\n    save () {\r\n      if (!this.$refs.form.validate()) {\r\n        return\r\n      }\r\n\r\n      this._newComment = this.newComment\r\n\r\n      this.$store.dispatch(ADD_COMMENT, { IsActive: true, type: parseInt(this.type), Question_Answer_Id: parseInt(this.parent), Comment: this._newComment, UserId: JSON.parse(localStorage.getItem('currentUser')).UserId }).then(response => {\r\n        console.log(this.comments)\r\n        // // this.$store.getters.comment\r\n        // this.comments.includes\r\n        this.comments.push({\r\n          Id: this.$store.getters.commentId,\r\n          UserId: JSON.parse(localStorage.getItem('currentUser')).UserId,\r\n          Comment: this._newComment,\r\n          CreateUser: JSON.parse(localStorage.getItem('currentUser')).UserName,\r\n          CreateDate: undefined\r\n        })\r\n        this.newComment = ''\r\n        this.input = false\r\n      }).catch(errorCode => { this.$dialog.alert(this.GetErrorMessage(this, errorCode), this.alertoptions) })\r\n    },\r\n    updateComment (comment) {\r\n      // eslint-disable-next-line no-undef\r\n      var newCommentText = $('#$updateCommentInput').val()\r\n      if (newCommentText.length > 0) {\r\n        comment.Comment = newCommentText\r\n        this.$store.dispatch(UPDATE_COMMENT, { Id: comment.Id, IsActive: true, type: parseInt(this.type), Question_Answer_Id: parseInt(this.parent), Comment: newCommentText, UserId: JSON.parse(localStorage.getItem('currentUser')).UserId }).then(response => {\r\n          this.selectedCommentId = -1\r\n        }).catch(errorCode => { this.$dialog.alert(this.GetErrorMessage(this, errorCode), this.alertoptions) })\r\n      }\r\n    },\r\n    isUpdateable (comment) {\r\n      if (comment.UserId === this.activeUser) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    },\r\n    isSelected (comment) {\r\n      if (comment.Id === this.selectedComment.Id) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    },\r\n    deleteComment: function (commentAnswerId) {\r\n      const request = {\r\n        Id: commentAnswerId,\r\n        IsActive: true\r\n      }\r\n\r\n      this.$store.dispatch(DELETE_COMMENT, request).then(response => {\r\n        this.comments.splice(this.comments.findIndex((el) => {\r\n          return el.Id === commentAnswerId\r\n        }), 1)\r\n      }).catch(errorCode => { this.$dialog.alert(this.GetErrorMessage(this, errorCode), this.alertoptions) })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.comment-content{\r\n  border-bottom: 1px solid #a4a4a4;\r\n  padding-top: 0px;\r\n  padding-bottom: 0px;\r\n  margin-bottom: 5px;\r\n}\r\n.comment-icon{\r\n  font-size: 16px;\r\n  padding-right: 6px;\r\n  padding-bottom: 2px;\r\n  padding-top: 2px;\r\n}\r\n.comment-update{\r\n  cursor: pointer;\r\n}\r\n.comment-update-delete-area{\r\n  display: flow-root;\r\n}\r\n.commentInputforUpdate{\r\n  font-size: 12px;\r\n  height: 25px;\r\n}\r\n</style>\r\n"]}]}