{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\library\\helpers\\apicall.js","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\library\\helpers\\apicall.js","mtime":1615592727938},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/ErtugrulSen/Desktop/visual Studio Project/AskDefinexFrontEnd/askdefinex-ui/src/library/helpers/apicall.js"],"names":["Axios","refreshToken","configStore","router","AUTH_LOGOUT","store","ApiCall","Accept","baseUrl","process","env","NODE_ENV","settings","publishUrl","localUrl","url","_headers","headers","Promise","resolve","reject","method","catch","error","response","status","localStorage","getItem","then","data","IsSucceed","Authorization","AxiosGetAll","headersForLogOut","dispatch","currentRoute","query","returnUrl","path","push","_error","console","log","ErrorCode","item","responseType","AxiosReadFile","resp","AxiosGetWithId","AxiosPost","AxiosPut","AxiosDelete"],"mappings":"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","sourcesContent":["import Axios from 'axios'\r\nimport { refreshToken } from './refreshtoken'\r\nimport configStore from './configStore'\r\nimport router from '../../router/index'\r\nimport { AUTH_LOGOUT } from '../../store/actions/auth'\r\nimport store from '../../store'\r\n\r\nexport default class ApiCall {\r\n    baseUrl = '';\r\n    headers = {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }\r\n\r\n    constructor () {\r\n      this.baseUrl = (process.env.NODE_ENV === 'production' ? configStore.settings.publishUrl : configStore.settings.localUrl)\r\n    }\r\n\r\n    async AxiosGetAll (url, _headers) {\r\n      this.headers = { ...this.headers, ..._headers }\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        Axios({\r\n          method: 'get',\r\n          url: this.baseUrl + url,\r\n          headers: this.headers\r\n        })\r\n          .catch(error => {\r\n            if (error.response.status === 401 && localStorage.getItem('accesstoken')) {\r\n              return new Promise((resolve) => {\r\n                refreshToken().then(response => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.IsSucceed) {\r\n                      _headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n                      resolve(this.AxiosGetAll(url, _headers))\r\n                    } else {\r\n                      const headersForLogOut = {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n\r\n                      store.dispatch(AUTH_LOGOUT, { headersForLogOut })\r\n                        .then(response => {\r\n                          router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                          router.push({path:'/login',query:router.currentRoute.query})\r\n                        })\r\n                    }\r\n                  }\r\n                })\r\n                  .catch(_error => {\r\n                    // ilk promise'nin reject ini kullandÄ±m Ã§Ã¼nkÃ¼ ilkinden dÃ¶nÃ¼yor error aslÄ±nda\r\n                    console.log(error)\r\n                    console.log(_error)\r\n                    router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                    router.push({path:'/login',query:router.currentRoute.query})\r\n                  })\r\n              })\r\n            } else if (error.response.status === 401 && !localStorage.getItem('accesstoken')) {\r\n              router.currentRoute.query.returnUrl = router.currentRoute.path\r\n              router.push({path:'/login',query:router.currentRoute.query})\r\n              reject(error)\r\n            } else {\r\n              reject(error)\r\n            }\r\n          })\r\n          .then(response => {\r\n            if (response && response.data && !response.data.IsSucceed && response.data.ErrorCode) {\r\n              reject(response.data.ErrorCode)\r\n            } else {\r\n              resolve(response)\r\n            }\r\n          })\r\n      })\r\n    }\r\n\r\n    async AxiosReadFile (url, item, _headers) {\r\n      this.headers = { ...this.headers, ..._headers }\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        Axios({\r\n          method: 'post',\r\n          url: this.baseUrl + url,\r\n          data: item,\r\n          headers: this.headers,\r\n          responseType: 'arraybuffer'\r\n        })\r\n          .catch(error => {\r\n            if (error.response.status === 401 && localStorage.getItem('accesstoken')) {\r\n              return new Promise((resolve) => {\r\n                refreshToken().then(response => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.IsSucceed) {\r\n                      _headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n                      resolve(this.AxiosReadFile(url, item, _headers))\r\n                    } else {\r\n                      const headersForLogOut = {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n\r\n                      store.dispatch(AUTH_LOGOUT, { headersForLogOut })\r\n                        .then(response => {\r\n                          router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                          router.push({path:'/login',query:router.currentRoute.query})\r\n                        })\r\n                    }\r\n                  }\r\n                })\r\n                  .catch(_error => {\r\n                    // ilk promise'nin reject ini kullandÄ±m Ã§Ã¼nkÃ¼ ilkinden dÃ¶nÃ¼yor error aslÄ±nda\r\n                    console.log(error)\r\n                    console.log(_error)\r\n                    router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                    router.push({path:'/login',query:router.currentRoute.query})\r\n                  })\r\n              })\r\n            } else if (error.response.status === 401 && !localStorage.getItem('accesstoken')) {\r\n              router.currentRoute.query.returnUrl = router.currentRoute.path\r\n              router.push({path:'/login',query:router.currentRoute.query})\r\n              reject(error)\r\n            } else {\r\n              reject(error)\r\n            }\r\n          })\r\n          .then(resp => {\r\n            resolve(resp)\r\n          })\r\n      })\r\n    }\r\n\r\n    async AxiosGetWithId (url, item, _headers) {\r\n      this.headers = { ...this.headers, ..._headers }\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        Axios({\r\n          method: 'get',\r\n          url: this.baseUrl + url,\r\n          data: item,\r\n          headers: this.headers\r\n        })\r\n          .catch(error => {\r\n            if (error.response.status === 401 && localStorage.getItem('accesstoken')) {\r\n              return new Promise((resolve) => {\r\n                refreshToken().then(response => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.IsSucceed) {\r\n                      _headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n                      resolve(this.AxiosGetWithId(url, item, _headers))\r\n                    } else {\r\n                      const headersForLogOut = {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n\r\n                      store.dispatch(AUTH_LOGOUT, { headersForLogOut })\r\n                        .then(response => {\r\n                          router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                          router.push({path:'/login',query:router.currentRoute.query})\r\n                        })\r\n                    }\r\n                  }\r\n                })\r\n                  .catch(_error => {\r\n                    // ilk promise'nin reject ini kullandÄ±m Ã§Ã¼nkÃ¼ ilkinden dÃ¶nÃ¼yor error aslÄ±nda\r\n                    console.log(error)\r\n                    console.log(_error)\r\n                    router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                    router.push({path:'/login',query:router.currentRoute.query})\r\n                  })\r\n              })\r\n            } else if (error.response.status === 401 && !localStorage.getItem('accesstoken')) {\r\n              router.currentRoute.query.returnUrl = router.currentRoute.path\r\n              router.push({path:'/login',query:router.currentRoute.query})\r\n              reject(error)\r\n            } else {\r\n              reject(error)\r\n            }\r\n          })\r\n          .then(response => {\r\n            if (response && response.data && !response.data.IsSucceed && response.data.ErrorCode) {\r\n              reject(response.data.ErrorCode)\r\n            } else {\r\n              resolve(response)\r\n            }\r\n          })\r\n      })\r\n    }\r\n\r\n    async AxiosPost (url, item, _headers) {\r\n      this.headers = { ...this.headers, ..._headers }\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        Axios({\r\n          method: 'post',\r\n          url: this.baseUrl + url,\r\n          data: item,\r\n          headers: this.headers\r\n        })\r\n          .catch(error => {\r\n            if (error.response.status === 401 && localStorage.getItem('accesstoken')) {\r\n              return new Promise((resolve) => {\r\n                refreshToken().then(response => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.IsSucceed) {\r\n                      _headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n                      resolve(this.AxiosPost(url, item, _headers))\r\n                    } else {\r\n                      const headersForLogOut = {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n\r\n                      store.dispatch(AUTH_LOGOUT, { headersForLogOut })\r\n                        .then(response => {\r\n                          router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                          router.push({path:'/login',query:router.currentRoute.query})\r\n                        })\r\n                    }\r\n                  }\r\n                })\r\n                  .catch(_error => {\r\n                    // ilk promise'nin reject ini kullandÄ±m Ã§Ã¼nkÃ¼ ilkinden dÃ¶nÃ¼yor error aslÄ±nda\r\n                    console.log(error)\r\n                    console.log(_error)\r\n                    router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                    router.push({path:'/login',query:router.currentRoute.query})\r\n                  })\r\n              })\r\n            } else if (error.response.status === 401 && !localStorage.getItem('accesstoken')) {\r\n              router.currentRoute.query.returnUrl = router.currentRoute.path\r\n              router.push({path:'/login',query:router.currentRoute.query})\r\n              reject(error)\r\n            } else {\r\n              reject(error)\r\n            }\r\n          })\r\n          .then(response => {\r\n            if (response && response.data && !response.data.IsSucceed && response.data.ErrorCode) {\r\n              reject(response.data.ErrorCode)\r\n            } else {\r\n              resolve(response)\r\n            }\r\n          })\r\n      })\r\n    }\r\n\r\n    async AxiosPut (url, item, _headers) {\r\n      this.headers = { ...this.headers, ..._headers }\r\n\r\n      return await new Promise((resolve, reject) => {\r\n        Axios({\r\n          method: 'put',\r\n          url: this.baseUrl + url,\r\n          data: item,\r\n          headers: this.headers\r\n        })\r\n          .catch(error => {\r\n            if (error.response.status === 401 && localStorage.getItem('accesstoken')) {\r\n              return new Promise((resolve) => {\r\n                refreshToken().then(response => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.IsSucceed) {\r\n                      _headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n                      resolve(this.AxiosPut(url, item, _headers))\r\n                    } else {\r\n                      const headersForLogOut = {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n\r\n                      store.dispatch(AUTH_LOGOUT, { headersForLogOut })\r\n                        .then(response => {\r\n                          router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                          router.push({path:'/login',query:router.currentRoute.query})\r\n                        })\r\n                    }\r\n                  }\r\n                })\r\n                  .catch(_error => {\r\n                    // ilk promise'nin reject ini kullandÄ±m Ã§Ã¼nkÃ¼ ilkinden dÃ¶nÃ¼yor error aslÄ±nda\r\n                    console.log(error)\r\n                    console.log(_error)\r\n                    router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                    router.push({path:'/login',query:router.currentRoute.query})\r\n                  })\r\n              })\r\n            } else if (error.response.status === 401 && !localStorage.getItem('accesstoken')) {\r\n              router.currentRoute.query.returnUrl = router.currentRoute.path\r\n              router.push({path:'/login',query:router.currentRoute.query})\r\n              reject(error)\r\n            } else {\r\n              reject(error)\r\n            }\r\n          })\r\n          .then(response => {\r\n            if (response && response.data && !response.data.IsSucceed && response.data.ErrorCode) {\r\n              reject(response.data.ErrorCode)\r\n            } else {\r\n              resolve(response)\r\n            }\r\n          })\r\n      })\r\n    }\r\n\r\n    async AxiosDelete (url, item, _headers) {\r\n      this.headers = { ...this.headers, ..._headers }\r\n      return await new Promise((resolve, reject) => {\r\n        Axios({\r\n          method: 'put',\r\n          url: this.baseUrl + url,\r\n          data: item,\r\n          headers: this.headers\r\n        })\r\n          .catch(error => {\r\n            if (error.response.status === 401 && localStorage.getItem('accesstoken')) {\r\n              return new Promise((resolve) => {\r\n                refreshToken().then(response => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.IsSucceed) {\r\n                      _headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n                      resolve(this.AxiosDelete(url, item, _headers))\r\n                    } else {\r\n                      const headersForLogOut = {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n\r\n                      store.dispatch(AUTH_LOGOUT, { headersForLogOut })\r\n                        .then(response => {\r\n                          router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                          router.push({path:'/login',query:router.currentRoute.query})\r\n                        })\r\n                    }\r\n                  }\r\n                })\r\n                  .catch(_error => {\r\n                    // ilk promise'nin reject ini kullandÄ±m Ã§Ã¼nkÃ¼ ilkinden dÃ¶nÃ¼yor error aslÄ±nda\r\n                    console.log(error)\r\n                    console.log(_error)\r\n                    router.currentRoute.query.returnUrl = router.currentRoute.path\r\n                    router.push({path:'/login',query:router.currentRoute.query})\r\n                  })\r\n              })\r\n            } else if (error.response.status === 401 && !localStorage.getItem('accesstoken')) {\r\n              router.currentRoute.query.returnUrl = router.currentRoute.path\r\n              router.push({path:'/login',query:router.currentRoute.query})\r\n              reject(error)\r\n            } else {\r\n              reject(error)\r\n            }\r\n          })\r\n          .then(response => {\r\n            if (response && response.data && !response.data.IsSucceed && response.data.ErrorCode) {\r\n              reject(response.data.ErrorCode)\r\n            } else {\r\n              resolve(response)\r\n            }\r\n          })\r\n      })\r\n    }\r\n}\r\n"]}]}