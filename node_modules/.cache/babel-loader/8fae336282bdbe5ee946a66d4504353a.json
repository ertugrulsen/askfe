{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\services\\CompanyService.js","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\services\\CompanyService.js","mtime":1614083118679},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0VydHVncnVsU2VuL0Rlc2t0b3AvdmlzdWFsIFN0dWRpbyBQcm9qZWN0L0Fza0RlZmluZXhGcm9udEVuZC9hc2tkZWZpbmV4LXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9FcnR1Z3J1bFNlbi9EZXNrdG9wL3Zpc3VhbCBTdHVkaW8gUHJvamVjdC9Bc2tEZWZpbmV4RnJvbnRFbmQvYXNrZGVmaW5leC11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1VzZXJzL0VydHVncnVsU2VuL0Rlc2t0b3AvdmlzdWFsIFN0dWRpbyBQcm9qZWN0L0Fza0RlZmluZXhGcm9udEVuZC9hc2tkZWZpbmV4LXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBBcGlDYWxsIGZyb20gJy4uL2xpYnJhcnkvaGVscGVycy9hcGljYWxsJzsKCnZhciBDb21wYW55U2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQ29tcGFueVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29tcGFueVNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKENvbXBhbnlTZXJ2aWNlLCBudWxsLCBbewogICAga2V5OiAiR2V0Q29tcGFueUluZm9ybWF0aW9uIiwKICAgIHZhbHVlOiAvLyBnZXQgY29tcGFueSBpbmZvcm1hdGlvbgogICAgZnVuY3Rpb24gKCkgewogICAgICB2YXIgX0dldENvbXBhbnlJbmZvcm1hdGlvbiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZXF1ZXN0KSB7CiAgICAgICAgdmFyIGhlYWRlcnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaGVhZGVycyA9IHsKICAgICAgICAgICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3N0b2tlbicpCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgICAgICAgICAgICB2YXIgYXBpID0gbmV3IEFwaUNhbGwoKTsKICAgICAgICAgICAgICAgICAgYXBpLkF4aW9zUG9zdCgnQ29tcGFueS9HZXRDb21wYW55JywgcmVxdWVzdCwgaGVhZGVycykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBHZXRDb21wYW55SW5mb3JtYXRpb24oX3gpIHsKICAgICAgICByZXR1cm4gX0dldENvbXBhbnlJbmZvcm1hdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gR2V0Q29tcGFueUluZm9ybWF0aW9uOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiVXBkYXRlQ29tcGFueUluZm9ybWF0aW9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfVXBkYXRlQ29tcGFueUluZm9ybWF0aW9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihyZXF1ZXN0KSB7CiAgICAgICAgdmFyIGhlYWRlcnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGhlYWRlcnMgPSB7CiAgICAgICAgICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcgKyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNjZXNzdG9rZW4nKQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgICAgIHZhciBhcGkgPSBuZXcgQXBpQ2FsbCgpOwogICAgICAgICAgICAgICAgICBhcGkuQXhpb3NQb3N0KCdDb21wYW55L1VwZGF0ZUNvbXBhbnknLCByZXF1ZXN0LCBoZWFkZXJzKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBVcGRhdGVDb21wYW55SW5mb3JtYXRpb24oX3gyKSB7CiAgICAgICAgcmV0dXJuIF9VcGRhdGVDb21wYW55SW5mb3JtYXRpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIFVwZGF0ZUNvbXBhbnlJbmZvcm1hdGlvbjsKICAgIH0oKQogIH1dKTsKCiAgcmV0dXJuIENvbXBhbnlTZXJ2aWNlOwp9KCk7CgpleHBvcnQgeyBDb21wYW55U2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["C:/Users/ErtugrulSen/Desktop/visual Studio Project/AskDefinexFrontEnd/askdefinex-ui/src/services/CompanyService.js"],"names":["ApiCall","CompanyService","request","headers","Accept","Authorization","localStorage","getItem","Promise","resolve","reject","api","AxiosPost","then","response","catch","error"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,4BAApB;;IAEqBC,c;;;;;;;WACnB;;2FACA,iBAAoCC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,OADR,GACkB;AAAEC,kBAAAA,MAAM,EAAE,kBAAV;AAA8B,kCAAgB,kBAA9C;AAAkEC,kBAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAA7F,iBADlB;AAAA;AAAA,uBAEe,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5C,sBAAMC,GAAG,GAAG,IAAIX,OAAJ,EAAZ;AACAW,kBAAAA,GAAG,CAACC,SAAJ,CAAc,oBAAd,EAAoCV,OAApC,EAA6CC,OAA7C,EACGU,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBL,oBAAAA,OAAO,CAACK,QAAD,CAAP;AACD,mBAHH,EAIGC,KAJH,CAIS,UAAAC,KAAK,EAAI;AACdN,oBAAAA,MAAM,CAACM,KAAD,CAAN;AACD,mBANH;AAOD,iBATY,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8FAcA,kBAAuCd,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,OADR,GACkB;AAAEC,kBAAAA,MAAM,EAAE,kBAAV;AAA8B,kCAAgB,kBAA9C;AAAkEC,kBAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAA7F,iBADlB;AAAA;AAAA,uBAEe,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5C,sBAAMC,GAAG,GAAG,IAAIX,OAAJ,EAAZ;AACAW,kBAAAA,GAAG,CAACC,SAAJ,CAAc,uBAAd,EAAuCV,OAAvC,EAAgDC,OAAhD,EACGU,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBL,oBAAAA,OAAO,CAACK,QAAD,CAAP;AACD,mBAHH,EAIGC,KAJH,CAIS,UAAAC,KAAK,EAAI;AACdN,oBAAAA,MAAM,CAACM,KAAD,CAAN;AACD,mBANH;AAOD,iBATY,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;SAhBmBf,c","sourcesContent":["import ApiCall from '../library/helpers/apicall'\r\n\r\nexport default class CompanyService {\r\n  // get company information\r\n  static async GetCompanyInformation (request) {\r\n    const headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n    return await new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('Company/GetCompany', request, headers)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async UpdateCompanyInformation (request) {\r\n    const headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n    return await new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('Company/UpdateCompany', request, headers)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n}\r\n"]}]}