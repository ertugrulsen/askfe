{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\store\\modules\\user.js","mtime":1614083118692},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJDOi9Vc2Vycy9FcnR1Z3J1bFNlbi9EZXNrdG9wL3Zpc3VhbCBTdHVkaW8gUHJvamVjdC9Bc2tEZWZpbmV4RnJvbnRFbmQvYXNrZGVmaW5leC11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgeyBMSVNUX0NPTVBBTllfVVNFUlMsIFNBVkVfVVNFUiwgVVBEQVRFX1VTRVIsIERFTEVURV9VU0VSIH0gZnJvbSAnLi4vYWN0aW9ucy91c2VyJzsKaW1wb3J0IFVzZXJTZXJ2aWNlIGZyb20gJy4uLy4uL3NlcnZpY2VzL1VzZXJTZXJ2aWNlJzsKdmFyIHN0YXRlID0gewogIGNvbXBhbnlVc2VyczogW10KfTsKdmFyIGdldHRlcnMgPSB7CiAgY29tcGFueVVzZXJzOiBmdW5jdGlvbiBjb21wYW55VXNlcnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5jb21wYW55VXNlcnM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIExJU1RfQ09NUEFOWV9VU0VSUywgZnVuY3Rpb24gKF9yZWYsIHJlcXVlc3QpIHsKICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIFVzZXJTZXJ2aWNlLkxpc3RDb21wYW55VXNlcnMocmVxdWVzdCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgY29tbWl0KExJU1RfQ09NUEFOWV9VU0VSUywgcmVzcG9uc2UpOwogICAgICByZXNvbHZlKCk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBTQVZFX1VTRVIsIGZ1bmN0aW9uIChfcmVmMiwgcmVxdWVzdCkgewogIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIFVzZXJTZXJ2aWNlLlNhdmVVc2VyKHJlcXVlc3QpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGNvbW1pdChTQVZFX1VTRVIsIHJlcXVlc3QsIHJlc3BvbnNlKTsKICAgICAgcmVzb2x2ZSgpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvcik7CiAgICB9KTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVBEQVRFX1VTRVIsIGZ1bmN0aW9uIChfcmVmMywgcmVxdWVzdCkgewogIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIFVzZXJTZXJ2aWNlLlVwZGF0ZVVzZXIocmVxdWVzdCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgY29tbWl0KFVQREFURV9VU0VSLCByZXF1ZXN0KTsKICAgICAgcmVzb2x2ZSgpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvcik7CiAgICB9KTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgREVMRVRFX1VTRVIsIGZ1bmN0aW9uIChfcmVmNCwgcmVxdWVzdCkgewogIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIFVzZXJTZXJ2aWNlLkRlbGV0ZVVzZXIocmVxdWVzdCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgY29tbWl0KERFTEVURV9VU0VSLCByZXF1ZXN0KTsKICAgICAgcmVzb2x2ZSgpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvcik7CiAgICB9KTsKICB9KTsKfSksIF9hY3Rpb25zKTsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBMSVNUX0NPTVBBTllfVVNFUlMsIGZ1bmN0aW9uIChzdGF0ZSwgcmVzcG9uc2UpIHsKICBzdGF0ZS5jb21wYW55VXNlcnMgPSByZXNwb25zZS5kYXRhLlJlc3BvbnNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIFNBVkVfVVNFUiwgZnVuY3Rpb24gKHN0YXRlLCByZXF1ZXN0LCByZXNwb25zZSkgewogIHJlcXVlc3QuSWQgPSByZXNwb25zZS5JZDsKICBzdGF0ZS5jb21wYW55VXNlcnMucHVzaChyZXF1ZXN0KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBVUERBVEVfVVNFUiwgZnVuY3Rpb24gKHN0YXRlLCByZXF1ZXN0KSB7CiAgdmFyIHVzZXIgPSBzdGF0ZS5jb21wYW55VXNlcnMuZmluZChmdW5jdGlvbiAoeCkgewogICAgcmV0dXJuIHguSWQgPSByZXF1ZXN0LklkOwogIH0pOwogIE9iamVjdC5hc3NpZ24odXNlciwgcmVxdWVzdCk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgREVMRVRFX1VTRVIsIGZ1bmN0aW9uIChzdGF0ZSwgcmVxdWVzdCkgewogIHZhciBpbmRleCA9IHN0YXRlLmNvbXBhbnlVc2Vycy5pbmRleE9mKHJlcXVlc3QpOwogIHN0YXRlLmNvbXBhbnlVc2Vycy5zcGxpY2UoaW5kZXgsIDEpOwp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["C:/Users/ErtugrulSen/Desktop/visual Studio Project/AskDefinexFrontEnd/askdefinex-ui/src/store/modules/user.js"],"names":["LIST_COMPANY_USERS","SAVE_USER","UPDATE_USER","DELETE_USER","UserService","state","companyUsers","getters","actions","request","commit","Promise","resolve","reject","ListCompanyUsers","then","response","catch","error","SaveUser","UpdateUser","DeleteUser","mutations","data","Response","Id","push","user","find","x","Object","assign","index","indexOf","splice"],"mappings":"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","sourcesContent":["import { LIST_COMPANY_USERS, SAVE_USER, UPDATE_USER, DELETE_USER } from '../actions/user'\r\nimport UserService from '../../services/UserService'\r\n\r\nconst state = {\r\n  companyUsers: []\r\n}\r\n\r\nconst getters = {\r\n  companyUsers: state => state.companyUsers\r\n}\r\n\r\nconst actions = {\r\n  [LIST_COMPANY_USERS]: ({ commit }, request) => {\r\n    return new Promise((resolve, reject) => {\r\n      UserService.ListCompanyUsers(request).then(response => {\r\n        commit(LIST_COMPANY_USERS, response)\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  },\r\n  [SAVE_USER]: ({ commit }, request) => {\r\n    return new Promise((resolve, reject) => {\r\n      UserService.SaveUser(request).then(response => {\r\n        commit(SAVE_USER, request, response)\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  },\r\n  [UPDATE_USER]: ({ commit }, request) => {\r\n    return new Promise((resolve, reject) => {\r\n      UserService.UpdateUser(request).then(response => {\r\n        commit(UPDATE_USER, request)\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  },\r\n  [DELETE_USER]: ({ commit }, request) => {\r\n    return new Promise((resolve, reject) => {\r\n      UserService.DeleteUser(request).then(response => {\r\n        commit(DELETE_USER, request)\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  [LIST_COMPANY_USERS]: (state, response) => {\r\n    state.companyUsers = response.data.Response;\r\n  },\r\n  [SAVE_USER]: (state, request, response) => {\r\n    request.Id= response.Id\r\n    state.companyUsers.push(request)\r\n  },\r\n  [UPDATE_USER]: (state, request) => {\r\n    var user = state.companyUsers.find(x => x.Id = request.Id);\r\n    Object.assign(user, request)\r\n  },\r\n  [DELETE_USER]: (state, request) => {\r\n    var index = state.companyUsers.indexOf(request)\r\n    state.companyUsers.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}\r\n"]}]}