{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\store\\modules\\company.js","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\store\\modules\\company.js","mtime":1614083118690},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJDOi9Vc2Vycy9FcnR1Z3J1bFNlbi9EZXNrdG9wL3Zpc3VhbCBTdHVkaW8gUHJvamVjdC9Bc2tEZWZpbmV4RnJvbnRFbmQvYXNrZGVmaW5leC11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IEdFVF9DT01QQU5ZX0lORk9STUFUSU9OLCBVUERBVEVfQ09NUEFOWV9JTkZPUk1BVElPTiB9IGZyb20gJy4uL2FjdGlvbnMvY29tcGFueSc7CmltcG9ydCBDb21wYW55U2VydmljZSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9Db21wYW55U2VydmljZSc7CnZhciBzdGF0ZSA9IHsKICBjb21wYW55SW5mb3JtYXRpb246IHt9LAogIGNvbXBhbnlVc2VyczogW10KfTsKdmFyIGdldHRlcnMgPSB7CiAgY29tcGFueUluZm9ybWF0aW9uOiBmdW5jdGlvbiBjb21wYW55SW5mb3JtYXRpb24oc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5jb21wYW55SW5mb3JtYXRpb247CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIEdFVF9DT01QQU5ZX0lORk9STUFUSU9OLCBmdW5jdGlvbiAoX3JlZiwgcmVxdWVzdCkgewogIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgQ29tcGFueVNlcnZpY2UuR2V0Q29tcGFueUluZm9ybWF0aW9uKHJlcXVlc3QpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGNvbW1pdChHRVRfQ09NUEFOWV9JTkZPUk1BVElPTiwgcmVzcG9uc2UpOwogICAgICByZXNvbHZlKCk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBVUERBVEVfQ09NUEFOWV9JTkZPUk1BVElPTiwgZnVuY3Rpb24gKF9yZWYyLCByZXF1ZXN0KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgQ29tcGFueVNlcnZpY2UuVXBkYXRlQ29tcGFueUluZm9ybWF0aW9uKHJlcXVlc3QpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGNvbW1pdChVUERBVEVfQ09NUEFOWV9JTkZPUk1BVElPTiwgcmVzcG9uc2UpOwogICAgICByZXNvbHZlKCk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0pOwp9KSwgX2FjdGlvbnMpOwp2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEdFVF9DT01QQU5ZX0lORk9STUFUSU9OLCBmdW5jdGlvbiAoc3RhdGUsIHJlc3BvbnNlKSB7CiAgc3RhdGUuY29tcGFueUluZm9ybWF0aW9uID0gcmVzcG9uc2UuZGF0YS5SZXNwb25zZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBVUERBVEVfQ09NUEFOWV9JTkZPUk1BVElPTiwgZnVuY3Rpb24gKHN0YXRlLCByZXNwb25zZSkge30pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["C:/Users/ErtugrulSen/Desktop/visual Studio Project/AskDefinexFrontEnd/askdefinex-ui/src/store/modules/company.js"],"names":["GET_COMPANY_INFORMATION","UPDATE_COMPANY_INFORMATION","CompanyService","state","companyInformation","companyUsers","getters","actions","request","commit","Promise","resolve","reject","GetCompanyInformation","then","response","catch","error","UpdateCompanyInformation","mutations","data","Response"],"mappings":";;;;;AAAA,SAASA,uBAAT,EAAkCC,0BAAlC,QAAoE,oBAApE;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,kBAAkB,EAAE,EADR;AAEZC,EAAAA,YAAY,EAAE;AAFF,CAAd;AAKA,IAAMC,OAAO,GAAG;AACdF,EAAAA,kBAAkB,EAAE,4BAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,kBAAV;AAAA;AADX,CAAhB;AAIA,IAAMG,OAAO,6CACVP,uBADU,EACgB,gBAAaQ,OAAb,EAAyB;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAClD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,IAAAA,cAAc,CAACW,qBAAf,CAAqCL,OAArC,EAA8CM,IAA9C,CAAmD,UAAAC,QAAQ,EAAI;AAC7DN,MAAAA,MAAM,CAACT,uBAAD,EAA0Be,QAA1B,CAAN;AACAJ,MAAAA,OAAO;AACR,KAHD,EAGGK,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACD,KALD;AAMD,GAPM,CAAP;AAQD,CAVU,6BAWVhB,0BAXU,EAWmB,iBAAaO,OAAb,EAAyB;AAAA,MAAtBC,MAAsB,SAAtBA,MAAsB;AACrD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,IAAAA,cAAc,CAACgB,wBAAf,CAAwCV,OAAxC,EAAiDM,IAAjD,CAAsD,UAAAC,QAAQ,EAAI;AAChEN,MAAAA,MAAM,CAACR,0BAAD,EAA6Bc,QAA7B,CAAN;AACAJ,MAAAA,OAAO;AACR,KAHD,EAGGK,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACD,KALD;AAMD,GAPM,CAAP;AAQD,CApBU,YAAb;AAuBA,IAAME,SAAS,iDACZnB,uBADY,EACc,UAACG,KAAD,EAAQY,QAAR,EAAqB;AAC9CZ,EAAAA,KAAK,CAACC,kBAAN,GAA2BW,QAAQ,CAACK,IAAT,CAAcC,QAAzC;AACD,CAHY,+BAIZpB,0BAJY,EAIiB,UAACE,KAAD,EAAQY,QAAR,EAAqB,CAClD,CALY,cAAf;AAQA,eAAe;AACbZ,EAAAA,KAAK,EAALA,KADa;AAEbG,EAAAA,OAAO,EAAPA,OAFa;AAGbC,EAAAA,OAAO,EAAPA,OAHa;AAIbY,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import { GET_COMPANY_INFORMATION, UPDATE_COMPANY_INFORMATION } from '../actions/company'\r\nimport CompanyService from '../../services/CompanyService'\r\n\r\nconst state = {\r\n  companyInformation: {},\r\n  companyUsers: []\r\n}\r\n\r\nconst getters = {\r\n  companyInformation: state => state.companyInformation\r\n}\r\n\r\nconst actions = {\r\n  [GET_COMPANY_INFORMATION]: ({ commit }, request) => {\r\n    return new Promise((resolve, reject) => {\r\n      CompanyService.GetCompanyInformation(request).then(response => {\r\n        commit(GET_COMPANY_INFORMATION, response)\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  },\r\n  [UPDATE_COMPANY_INFORMATION]: ({ commit }, request) => {\r\n    return new Promise((resolve, reject) => {\r\n      CompanyService.UpdateCompanyInformation(request).then(response => {\r\n        commit(UPDATE_COMPANY_INFORMATION, response)\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  [GET_COMPANY_INFORMATION]: (state, response) => {\r\n    state.companyInformation = response.data.Response;\r\n  },\r\n  [UPDATE_COMPANY_INFORMATION]: (state, response) => {\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}\r\n"]}]}