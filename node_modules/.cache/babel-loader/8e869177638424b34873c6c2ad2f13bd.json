{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\services\\AnswerService.js","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\services\\AnswerService.js","mtime":1615592727945},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/ErtugrulSen/Desktop/visual Studio Project/AskDefinexFrontEnd/askdefinex-ui/src/services/AnswerService.js"],"names":["ApiCall","AnswerService","request","headers","Authorization","localStorage","getItem","Promise","resolve","reject","api","AxiosPost","then","response","catch","error","Accept","AxiosDelete","console","log"],"mappings":"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","sourcesContent":["import ApiCall from '../library/helpers/apicall'\r\n\r\nexport default class AnswerService {\r\n  // get company information\r\n  static async Add (request) {\r\n    const headers = { Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n    return await new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('AskAnswer/CreateAnswer', request, headers)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async Update (request) {\r\n    const headers = { Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n    return await new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('AskAnswer/UpdateAnswer', request, headers)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async Delete (request) {\r\n    const headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer '  + localStorage.getItem('accesstoken') }\r\n    return await new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosDelete('AskAnswer/DeleteAnswer', request, headers)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async VoteIncrease (request) {\r\n    console.log(\"voteincrese\")\r\n    const headers = { Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n    return await new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('AskAnswer/AnswerUpdateUpVote', request, headers)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          console.log(\"service\", error,request)\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n  static async VoteDecrease (request) {\r\n    console.log(\"VoteDecrease answer\",request)\r\n    const headers = { Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n    return await new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('AskAnswer/AnswerUpdateDownVote', request, headers)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n}\r\n"]}]}