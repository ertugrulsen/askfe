{"remainingRequest":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\services\\AuthService.js","dependencies":[{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\src\\services\\AuthService.js","mtime":1615592727946},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ErtugrulSen\\Desktop\\visual Studio Project\\AskDefinexFrontEnd\\askdefinex-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0VydHVncnVsU2VuL0Rlc2t0b3AvdmlzdWFsIFN0dWRpbyBQcm9qZWN0L0Fza0RlZmluZXhGcm9udEVuZC9hc2tkZWZpbmV4LXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9FcnR1Z3J1bFNlbi9EZXNrdG9wL3Zpc3VhbCBTdHVkaW8gUHJvamVjdC9Bc2tEZWZpbmV4RnJvbnRFbmQvYXNrZGVmaW5leC11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1VzZXJzL0VydHVncnVsU2VuL0Rlc2t0b3AvdmlzdWFsIFN0dWRpbyBQcm9qZWN0L0Fza0RlZmluZXhGcm9udEVuZC9hc2tkZWZpbmV4LXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBBcGlDYWxsIGZyb20gJy4uL2xpYnJhcnkvaGVscGVycy9hcGljYWxsJzsKCnZhciBBdXRoU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQXV0aFNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0aFNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEF1dGhTZXJ2aWNlLCBudWxsLCBbewogICAga2V5OiAiTG9naW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9Mb2dpbiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZXF1ZXN0KSB7CiAgICAgICAgdmFyIGhlYWRlcnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaGVhZGVycyA9IHsKICAgICAgICAgICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgICAgIHZhciBhcGkgPSBuZXcgQXBpQ2FsbCgpOwogICAgICAgICAgICAgICAgICBhcGkuQXhpb3NQb3N0KCdBc2tBdXRoZW50aWNhdGlvbi9Bc2tMb2dpbicsIHJlcXVlc3QsIGhlYWRlcnMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2N1cnJlbnRVc2VyJywgSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgICAgVXNlcklkOiByZXNwb25zZS5kYXRhLlJlc3BvbnNlLklkLAogICAgICAgICAgICAgICAgICAgICAgVXNlck5hbWU6IHJlc3BvbnNlLmRhdGEuUmVzcG9uc2UuVXNlck5hbWUsCiAgICAgICAgICAgICAgICAgICAgICBSb2xlczogcmVzcG9uc2UuZGF0YS5SZXNwb25zZS5Sb2xlcwogICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWNjZXNzdG9rZW4nLCByZXNwb25zZS5kYXRhLlJlc3BvbnNlLkFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVmcmVzaHRva2VuJywgcmVzcG9uc2UuZGF0YS5SZXNwb25zZS5SZWZyZXNoVG9rZW4pOwogICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnY3VycmVudFVzZXInKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWNjZXNzdG9rZW4nKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgncmVmcmVzaHRva2VuJyk7CiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBMb2dpbihfeCkgewogICAgICAgIHJldHVybiBfTG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIExvZ2luOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiUmVnaXN0ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9SZWdpc3RlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVxdWVzdCkgewogICAgICAgIHZhciBoZWFkZXJzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBoZWFkZXJzID0gewogICAgICAgICAgICAgICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgICAgIHZhciBhcGkgPSBuZXcgQXBpQ2FsbCgpOwogICAgICAgICAgICAgICAgICBhcGkuQXhpb3NQb3N0KCdBc2tBdXRoZW50aWNhdGlvbi9Bc2tSZWdpc3RlcicsIHJlcXVlc3QsIGhlYWRlcnMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2N1cnJlbnRVc2VyJywgSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgICAgVXNlcklkOiByZXNwb25zZS5kYXRhLlJlc3BvbnNlLklkLAogICAgICAgICAgICAgICAgICAgICAgVXNlck5hbWU6IHJlc3BvbnNlLmRhdGEuUmVzcG9uc2UuVXNlck5hbWUsCiAgICAgICAgICAgICAgICAgICAgICBSb2xlczogcmVzcG9uc2UuZGF0YS5SZXNwb25zZS5Sb2xlcwogICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWNjZXNzdG9rZW4nLCByZXNwb25zZS5kYXRhLlJlc3BvbnNlLkFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVmcmVzaHRva2VuJywgcmVzcG9uc2UuZGF0YS5SZXNwb25zZS5SZWZyZXNoVG9rZW4pOwogICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnY3VycmVudFVzZXInKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWNjZXNzdG9rZW4nKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgncmVmcmVzaHRva2VuJyk7CiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIFJlZ2lzdGVyKF94MikgewogICAgICAgIHJldHVybiBfUmVnaXN0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIFJlZ2lzdGVyOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiTG9nb3V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfTG9nb3V0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgaGVhZGVyczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaGVhZGVycyA9IHsKICAgICAgICAgICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3N0b2tlbicpCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICAgICAgICAgICAgdmFyIGFwaSA9IG5ldyBBcGlDYWxsKCk7CiAgICAgICAgICAgICAgICAgIGFwaS5BeGlvc1Bvc3QoJ0Fza0F1dGhlbnRpY2F0aW9uL0xvZ291dCcsIHt9LCBoZWFkZXJzKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gTG9nb3V0KCkgewogICAgICAgIHJldHVybiBfTG9nb3V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBMb2dvdXQ7CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBBdXRoU2VydmljZTsKfSgpOwoKZXhwb3J0IHsgQXV0aFNlcnZpY2UgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["C:/Users/ErtugrulSen/Desktop/visual Studio Project/AskDefinexFrontEnd/askdefinex-ui/src/services/AuthService.js"],"names":["ApiCall","AuthService","request","headers","Accept","Promise","resolve","reject","api","AxiosPost","then","response","localStorage","setItem","JSON","stringify","UserId","data","Response","Id","UserName","Roles","AccessToken","RefreshToken","catch","error","removeItem","Authorization","getItem"],"mappings":"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","sourcesContent":["import ApiCall from '../library/helpers/apicall'\r\n\r\nexport default class AuthService {\r\n  static async Login (request) {\r\n    const headers = { Accept: 'application/json', 'Content-Type': 'application/json' }\r\n    return new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('AskAuthentication/AskLogin', request, headers)\r\n        .then(response => {\r\n          localStorage.setItem('currentUser', JSON.stringify({ UserId: response.data.Response.Id, UserName: response.data.Response.UserName, Roles: response.data.Response.Roles }))\r\n          localStorage.setItem('accesstoken', response.data.Response.AccessToken)\r\n          localStorage.setItem('refreshtoken', response.data.Response.RefreshToken)\r\n\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          localStorage.removeItem('currentUser')\r\n          localStorage.removeItem('accesstoken')\r\n          localStorage.removeItem('refreshtoken')\r\n\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async Register (request) {\r\n    const headers = { Accept: 'application/json', 'Content-Type': 'application/json' }\r\n    return new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('AskAuthentication/AskRegister', request, headers)\r\n        .then(response => {\r\n          localStorage.setItem('currentUser', JSON.stringify({ UserId: response.data.Response.Id,UserName: response.data.Response.UserName, Roles: response.data.Response.Roles}))\r\n          localStorage.setItem('accesstoken', response.data.Response.AccessToken)\r\n          localStorage.setItem('refreshtoken', response.data.Response.RefreshToken)\r\n\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          localStorage.removeItem('currentUser')\r\n          localStorage.removeItem('accesstoken')\r\n          localStorage.removeItem('refreshtoken')\r\n\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async Logout () {\r\n    const headers = { Accept: 'application/json', 'Content-Type': 'application/json', Authorization: 'Bearer ' + localStorage.getItem('accesstoken') }\r\n    return new Promise((resolve, reject) => {\r\n      const api = new ApiCall()\r\n      api.AxiosPost('AskAuthentication/Logout', {}, headers)\r\n    })\r\n  }\r\n}\r\n"]}]}